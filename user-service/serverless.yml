org: shresth72
app: user-service
service: user-service
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  versionFunctions: false
  stage: "dev"
  region: "us-east-1"
  httpApi:
    cors: true
  environment:
    SNS_TOPIC: { Ref: CustomerTopic }
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - { Ref: CustomerTopic }

custom:
  stage: "dev"
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002

functions:
  signup:
    handler: app/handler.Signup
    events:
      - httpApi:
          path: /signup
          method: post
  login:
    handler: app/handler.Login
    events:
      - httpApi:
          path: /login
          method: post
  verify:
    handler: app/handler.Verify
    events:
      - httpApi:
          path: /verify
          method: get
      - httpApi:
          path: /verify
          method: post
  profile:
    handler: app/handler.Profile
    events:
      - httpApi:
          path: /user
          method: post
      - httpApi:
          path: /user
          method: get
      - httpApi:
          path: /user
          method: put
  cart:
    handler: app/handler.Cart
    timeout: 15
    events:
      - httpApi:
          path: /cart
          method: post
      - httpApi:
          path: /cart
          method: get
      - httpApi:
          path: /cart/{id}
          method: put
      - httpApi:
          path: /cart/{id}
          method: delete
  payment:
    handler: app/handler.Payment
    events:
      - httpApi:
          path: /payment
          method: post
      - httpApi:
          path: /payment
          method: get
      - httpApi:
          path: /payment
          method: put
  collect-payment:
    handler: app/handler.CollectPayment
    events:
      - httpApi:
          path: /collect-payment
          method: post
  place-order:
    handler: app/handler.PlaceOrder
    events:
      - httpApi:
          path: /order
          method: post

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  # - serverless-plugin-optimize

# package:
#   individually: true

resources:
  Resources:
    CustomerTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: "customer sns topic description"
        TopicName: CustomerTopic

  # output for later usages
  Outputs:
    CustomerTopicInfo:
      Description: customer-topic
      Value: { Ref: CustomerTopic }
      Export:
        Name: customer-topic
